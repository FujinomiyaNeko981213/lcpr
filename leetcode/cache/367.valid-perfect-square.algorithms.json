{"id":367,"fid":"367","name":"有效的完全平方数","slug":"valid-perfect-square","link":"https://leetcode.cn/problems/valid-perfect-square/description/","percent":44.99526597553635,"level":"Easy","category":"algorithms","en_name":"Valid Perfect Square","cn_name":"有效的完全平方数","totalAC":"281.9K","totalSubmit":"626.5K","likes":579,"dislikes":0,"desc":"<p>给你一个正整数 <code>num</code> 。如果 <code>num</code> 是一个完全平方数，则返回 <code>true</code> ，否则返回 <code>false</code> 。</p>\n\n<p><strong>完全平方数</strong> 是一个可以写成某个整数的平方的整数。换句话说，它可以写成某个整数和自身的乘积。</p>\n\n<p>不能使用任何内置的库函数，如&nbsp; <code>sqrt</code> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong class=\"example\">示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>num = 16\n<strong>输出：</strong>true\n<strong>解释：</strong>返回 true ，因为 4 * 4 = 16 且 4 是一个整数。\n</pre>\n\n<p><strong class=\"example\">示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>num = 14\n<strong>输出：</strong>false\n<strong>解释：</strong>返回 false ，因为 3.742 * 3.742 = 14 但 3.742 不是一个整数。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool isPerfectSquare(int num) {\n\n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean isPerfectSquare(int num) {\n\n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def isPerfectSquare(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def isPerfectSquare(self, num: int) -> bool:"},{"value":"c","text":"C","defaultCode":"bool isPerfectSquare(int num) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool IsPerfectSquare(int num) {\n\n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number} num\n * @return {boolean}\n */\nvar isPerfectSquare = function(num) {\n\n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function isPerfectSquare(num: number): boolean {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer $num\n     * @return Boolean\n     */\n    function isPerfectSquare($num) {\n\n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func isPerfectSquare(_ num: Int) -> Bool {\n\n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun isPerfectSquare(num: Int): Boolean {\n\n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  bool isPerfectSquare(int num) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func isPerfectSquare(num int) bool {\n\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} num\n# @return {Boolean}\ndef is_perfect_square(num)\n\nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def isPerfectSquare(num: Int): Boolean = {\n\n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn is_perfect_square(num: i32) -> bool {\n\n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (is-perfect-square num)\n  (-> exact-integer? boolean?)\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec is_perfect_square(Num :: integer()) -> boolean().\nis_perfect_square(Num) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec is_perfect_square(num :: integer) :: boolean\n  def is_perfect_square(num) do\n    \n  end\nend"}],"testcase":"16","testable":true,"templateMeta":{"name":"isPerfectSquare","params":[{"name":"num","type":"integer"}],"return":{"type":"boolean"}}}